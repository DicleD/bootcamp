# EDA

#1
import seaborn as sns
import pandas as pd
import numpy as np
import matplotlib as plt
def load_titanic():
    df = pd.read_csv("titanic.csv")
    return df
df = load_titanic()

# We want to come up with a function that gives us the big picture of our data
df.head()
df.shape
df.ndim
df.info()
df.columns
df.describe().T
df.isnull().values.any()
df.isnull().sum()

def check_df(dataframe, head = 5):
    print("##################### Shape #####################")
    print(dataframe.shape)
    print("##################### Types #####################")
    print(dataframe.dtypes)
    print("##################### Head #####################")
    print(dataframe.head(head))
    print("##################### Tail #####################")
    print(dataframe.tail(head))
    print("##################### NA #####################")
    print(dataframe.isnull().sum())
    print("##################### Quantiles #####################")
    print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)

check_df(df)


#2 Categorical Variable Analysis
df["Sex"].value_counts()
df["Sex"].unique()
df["Sex"].nunique()

cat_col = [col for col in df.columns if df[col].dtype == "O"]
num_col = [col for col in df.columns if df[col].dtype != "O"]
num_but_cat = [col for col in df.columns if df[col].nunique() < 10 and df[col].dtype != "O"]
cat_but_car = [col for col in df.columns if df[col].nunique() > 20 and df[col].dtype != "O"]

cat_col = cat_col + num_but_cat
cat_col = [col for col in cat_col if col not in cat_but_cdef cat_summary(dataframe, col_name, plot=False):
    print(pd.DataFrame({col_name: df[col_name].value_counts(),
                        "Ratio": 100 * df[col_name].value_counts()/ len(dataframe)}))
    print("##########################################")
    if plot:
       sns.countplot(x=dataframe[col_name], data=dataframe)
       plt.show()



#3 Numerical Variable Analysis
df[["Age", "Fare"]].describe([0.05, 0.10, 0.25, 0.50, 0.75, 0.80, 0.90, 0.95, 0.99]).T
num_col = [col for df.columns if df[col].dtype != "O" and col not in cat_col and col not in ["PassengerId", "Survived"]]

def num_summary(dataframe, num_col, plot=False):
    quantiles = [0.05, 0.10, 0.25, 0.50, 0.75, 0.80, 0.90, 0.95, 0.99]
    print(dataframe[num_col].decsribe(quantiles).T)

    if plot:
        dataframe[num_col].hist()
        plt.xlabel("num_col")
        plt.title("num_col")
        plt.show()

for col in num_cols:
    print(num_summary(df, col, plot=True))

# Finding the categorical and numerical columns by a single function to speed the process

def grab_col_names(dataframe, cat_th=10, car_th=20):
    cat_cols = [col for col in dataframe.columns if dataframe[col].dtype == "O"]
    num_but_cat = [col for col in dataframe.columns if dataframe[col] != "O" and dataframe[col].nunique()<cat_th]
    cat_but_car = [col for col in dataframe.columns if dataframe[col].dtype == "O" and dataframe[col].nunique()>car_th]
    cat_cols = cat_cols + num_but_cat
    cat_cols = [col for col in cat_cols if col not in cat_but_car]
    num_cols = [col for col in dataframe.columns if dataframe[col].dtype != "O" and col not in num_but_cat]

    print(f"Observations: {dataframe.shape[0]}")
    print(f"Variables: {dataframe.shape[1]}")
    print(f'cat_cols: {len(cat_cols)}')
    print(f'num_cols: {len(num_cols)}')
    print(f'cat_but_car: {len(cat_but_car)}')
    print(f'num_but_cat: {len(num_but_cat)}')
    return cat_cols, num_cols, cat_but_car

cat_cols, num_cols, cat_but_car = grab_col_names(df)
for col in cat_cols:
    cat_summary(df,col)

for col in num_cols:
    num_summary(df,col)


